package hex;

import map.MapHexes;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

//Totally should have just used 19 Hex tests, they were specifically written to be used here.
//Buuut I've forgotten about it so now it looks weird. But alright I guess

//Now I should create a method that tests connection of 2 hexes (just like the ones that create a map)
//Then I should test 19 hexes with HexTest and run 18 connection checks, I guess
//Aaaaand I scrap everything I've got now, but it's okay
//Actually I don't scrap it, I use it for testing MapDrawer
class MapHexesTest {
    @Test
    public void mapCompositionTest() {
        int startX = 200, startY = 30;
//        MapHexes map = new MapHexes(startX, startY);
//        Hex top1Left = map.getTop1Left();
//        assertEquals(startX, top1Left.upPoint.getX());
//        assertEquals(startY, top1Left.upPoint.getY());
//        assertEquals(startX+64, top1Left.upperRightPoint.getX());
//        assertEquals(startY+32, top1Left.upperRightPoint.getY());
//        assertEquals(startX+64, top1Left.lowerRightPoint.getX());
//        assertEquals(startY+106, top1Left.lowerRightPoint.getY());
//        assertEquals(startX, top1Left.lowPoint.getX());
//        assertEquals(startY+138, top1Left.lowPoint.getY());
//        assertEquals(startX-64, top1Left.lowerLeftPoint.getX());
//        assertEquals(startY+106, top1Left.lowerLeftPoint.getY());
//        assertEquals(startX-64, top1Left.upperLeftPoint.getX());
//        assertEquals(startY+32, top1Left.upperLeftPoint.getY());
//        Hex top1Middle = map.getTop1Middle();
//        assertEquals(startX+128, top1Middle.upPoint.getX());
//        assertEquals(startY, top1Middle.upPoint.getY());
//        assertEquals(startX+192, top1Middle.upperRightPoint.getX());
//        assertEquals(startY+32, top1Middle.upperRightPoint.getY());
//        assertEquals(startX+192, top1Middle.lowerRightPoint.getX());
//        assertEquals(startY+106, top1Middle.lowerRightPoint.getY());
//        assertEquals(startX+128, top1Middle.lowPoint.getX());
//        assertEquals(startY+138, top1Middle.lowPoint.getY());
//        assertEquals(startX+64, top1Middle.lowerLeftPoint.getX());
//        assertEquals(startY+106, top1Middle.lowerLeftPoint.getY());
//        assertEquals(startX+64, top1Middle.upperLeftPoint.getX());
//        assertEquals(startY+32, top1Middle.upperLeftPoint.getY());
//        Hex top1Right = map.getTop1Right();
//        assertEquals(startX+256, top1Right.upPoint.getX());
//        assertEquals(startY, top1Right.upPoint.getY());
//        assertEquals(startX+320, top1Right.upperRightPoint.getX());
//        assertEquals(startY+32, top1Right.upperRightPoint.getY());
//        assertEquals(startX+320, top1Right.lowerRightPoint.getX());
//        assertEquals(startY+106, top1Right.lowerRightPoint.getY());
//        assertEquals(startX+256, top1Right.lowPoint.getX());
//        assertEquals(startY+138, top1Right.lowPoint.getY());
//        assertEquals(startX+192, top1Right.lowerLeftPoint.getX());
//        assertEquals(startY+106, top1Right.lowerLeftPoint.getY());
//        assertEquals(startX+192, top1Right.upperLeftPoint.getX());
//        assertEquals(startY+32, top1Right.upperLeftPoint.getY());
//        Hex top2Left = map.getTop2Left();
//        assertEquals(startX-64, top2Left.upPoint.getX());
//        assertEquals(startY+106, top2Left.upPoint.getY());
//        assertEquals(startX, top2Left.upperRightPoint.getX());
//        assertEquals(startY+138, top2Left.upperRightPoint.getY());
//        assertEquals(startX, top2Left.lowerRightPoint.getX());
//        assertEquals(startY+212, top2Left.lowerRightPoint.getY());
//        assertEquals(startX-64, top2Left.lowPoint.getX());
//        assertEquals(startY+244, top2Left.lowPoint.getY());
//        assertEquals(startX-128, top2Left.lowerLeftPoint.getX());
//        assertEquals(startY+212, top2Left.lowerLeftPoint.getY());
//        assertEquals(startX-128, top2Left.upperLeftPoint.getX());
//        assertEquals(startY+138, top2Left.upperLeftPoint.getY());
//        Hex top2Middle2 = map.getTop2Middle2();
//        assertEquals(startX+64, top2Middle2.upPoint.getX());
//        assertEquals(startY+106, top2Middle2.upPoint.getY());
//        assertEquals(startX+128, top2Middle2.upperRightPoint.getX());
//        assertEquals(startY+138, top2Middle2.upperRightPoint.getY());
//        assertEquals(startX+128, top2Middle2.lowerRightPoint.getX());
//        assertEquals(startY+212, top2Middle2.lowerRightPoint.getY());
//        assertEquals(startX+64, top2Middle2.lowPoint.getX());
//        assertEquals(startY+244, top2Middle2.lowPoint.getY());
//        assertEquals(startX, top2Middle2.lowerLeftPoint.getX());
//        assertEquals(startY+212, top2Middle2.lowerLeftPoint.getY());
//        assertEquals(startX, top2Middle2.upperLeftPoint.getX());
//        assertEquals(startY+138, top2Middle2.upperLeftPoint.getY());
//        Hex top2Middle3 = map.getTop2Middle3();
//        assertEquals(startX+192, top2Middle3.upPoint.getX());
//        assertEquals(startY+106, top2Middle3.upPoint.getY());
//        assertEquals(startX+256, top2Middle3.upperRightPoint.getX());
//        assertEquals(startY+138, top2Middle3.upperRightPoint.getY());
//        assertEquals(startX+256, top2Middle3.lowerRightPoint.getX());
//        assertEquals(startY+212, top2Middle3.lowerRightPoint.getY());
//        assertEquals(startX+192, top2Middle3.lowPoint.getX());
//        assertEquals(startY+244, top2Middle3.lowPoint.getY());
//        assertEquals(startX+128, top2Middle3.lowerLeftPoint.getX());
//        assertEquals(startY+212, top2Middle3.lowerLeftPoint.getY());
//        assertEquals(startX+128, top2Middle3.upperLeftPoint.getX());
//        assertEquals(startY+138, top2Middle3.upperLeftPoint.getY());
//        Hex top2Right = map.getTop2Right();
//        assertEquals(startX+320, top2Right.upPoint.getX());
//        assertEquals(startY+106, top2Right.upPoint.getY());
//        assertEquals(startX+384, top2Right.upperRightPoint.getX());
//        assertEquals(startY+138, top2Right.upperRightPoint.getY());
//        assertEquals(startX+384, top2Right.lowerRightPoint.getX());
//        assertEquals(startY+212, top2Right.lowerRightPoint.getY());
//        assertEquals(startX+320, top2Right.lowPoint.getX());
//        assertEquals(startY+244, top2Right.lowPoint.getY());
//        assertEquals(startX+256, top2Right.lowerLeftPoint.getX());
//        assertEquals(startY+212, top2Right.lowerLeftPoint.getY());
//        assertEquals(startX+256, top2Right.upperLeftPoint.getX());
//        assertEquals(startY+138, top2Right.upperLeftPoint.getY());
//        Hex middleLeft = map.getMiddleLeft();
//        assertEquals(startX-128, middleLeft.upPoint.getX());
//        assertEquals(startY+212, middleLeft.upPoint.getY());
//        assertEquals(startX-64, middleLeft.upperRightPoint.getX());
//        assertEquals(startY+244, middleLeft.upperRightPoint.getY());
//        assertEquals(startX-64, middleLeft.lowerRightPoint.getX());
//        assertEquals(startY+318, middleLeft.lowerRightPoint.getY());
//        assertEquals(startX-128, middleLeft.lowPoint.getX());
//        assertEquals(startY+350, middleLeft.lowPoint.getY());
//        assertEquals(startX-192, middleLeft.lowerLeftPoint.getX());
//        assertEquals(startY+318, middleLeft.lowerLeftPoint.getY());
//        assertEquals(startX-192, middleLeft.upperLeftPoint.getX());
//        assertEquals(startY+244, middleLeft.upperLeftPoint.getY());
//        Hex middle2 = map.getMiddle2();
//        assertEquals(startX, middle2.upPoint.getX());
//        assertEquals(startY+212, middle2.upPoint.getY());
//        assertEquals(startX+64, middle2.upperRightPoint.getX());
//        assertEquals(startY+244, middle2.upperRightPoint.getY());
//        assertEquals(startX+64, middle2.lowerRightPoint.getX());
//        assertEquals(startY+318, middle2.lowerRightPoint.getY());
//        assertEquals(startX, middle2.lowPoint.getX());
//        assertEquals(startY+350, middle2.lowPoint.getY());
//        assertEquals(startX-64, middle2.lowerLeftPoint.getX());
//        assertEquals(startY+318, middle2.lowerLeftPoint.getY());
//        assertEquals(startX-64, middle2.upperLeftPoint.getX());
//        assertEquals(startY+244, middle2.upperLeftPoint.getY());
//        Hex middle3 = map.getMiddle3();
//        assertEquals(startX+128, middle3.upPoint.getX());
//        assertEquals(startY+212, middle3.upPoint.getY());
//        assertEquals(startX+192, middle3.upperRightPoint.getX());
//        assertEquals(startY+244, middle3.upperRightPoint.getY());
//        assertEquals(startX+192, middle3.lowerRightPoint.getX());
//        assertEquals(startY+318, middle3.lowerRightPoint.getY());
//        assertEquals(startX+128, middle3.lowPoint.getX());
//        assertEquals(startY+350, middle3.lowPoint.getY());
//        assertEquals(startX+64, middle3.lowerLeftPoint.getX());
//        assertEquals(startY+318, middle3.lowerLeftPoint.getY());
//        assertEquals(startX+64, middle3.upperLeftPoint.getX());
//        assertEquals(startY+244, middle3.upperLeftPoint.getY());
//        Hex middle4 = map.getMiddle4();
//        assertEquals(startX+256, middle4.upPoint.getX());
//        assertEquals(startY+212, middle4.upPoint.getY());
//        assertEquals(startX+320, middle4.upperRightPoint.getX());
//        assertEquals(startY+244, middle4.upperRightPoint.getY());
//        assertEquals(startX+320, middle4.lowerRightPoint.getX());
//        assertEquals(startY+318, middle4.lowerRightPoint.getY());
//        assertEquals(startX+256, middle4.lowPoint.getX());
//        assertEquals(startY+350, middle4.lowPoint.getY());
//        assertEquals(startX+192, middle4.lowerLeftPoint.getX());
//        assertEquals(startY+318, middle4.lowerLeftPoint.getY());
//        assertEquals(startX+192, middle4.upperLeftPoint.getX());
//        assertEquals(startY+244, middle4.upperLeftPoint.getY());
//        Hex middleRight = map.getMiddleRight();
//        assertEquals(startX+384, middleRight.upPoint.getX());
//        assertEquals(startY+212, middleRight.upPoint.getY());
//        assertEquals(startX+448, middleRight.upperRightPoint.getX());
//        assertEquals(startY+244, middleRight.upperRightPoint.getY());
//        assertEquals(startX+448, middleRight.lowerRightPoint.getX());
//        assertEquals(startY+318, middleRight.lowerRightPoint.getY());
//        assertEquals(startX+384, middleRight.lowPoint.getX());
//        assertEquals(startY+350, middleRight.lowPoint.getY());
//        assertEquals(startX+320, middleRight.lowerLeftPoint.getX());
//        assertEquals(startY+318, middleRight.lowerLeftPoint.getY());
//        assertEquals(startX+320, middleRight.upperLeftPoint.getX());
//        assertEquals(startY+244, middleRight.upperLeftPoint.getY());
//        Hex bottom1Left = map.getBottom1Left();
//        assertEquals(startX-64, bottom1Left.upPoint.getX());
//        assertEquals(startY+318, bottom1Left.upPoint.getY());
//        assertEquals(startX, bottom1Left.upperRightPoint.getX());
//        assertEquals(startY+350, bottom1Left.upperRightPoint.getY());
//        assertEquals(startX, bottom1Left.lowerRightPoint.getX());
//        assertEquals(startY+424, bottom1Left.lowerRightPoint.getY());
//        assertEquals(startX-64, bottom1Left.lowPoint.getX());
//        assertEquals(startY+456, bottom1Left.lowPoint.getY());
//        assertEquals(startX-128, bottom1Left.lowerLeftPoint.getX());
//        assertEquals(startY+424, bottom1Left.lowerLeftPoint.getY());
//        assertEquals(startX-128, bottom1Left.upperLeftPoint.getX());
//        assertEquals(startY+350, bottom1Left.upperLeftPoint.getY());
//        Hex bottom1middle2 = map.getBottom1Middle2();
//        assertEquals(startX+64, bottom1middle2.upPoint.getX());
//        assertEquals(startY+318, bottom1middle2.upPoint.getY());
//        assertEquals(startX+128, bottom1middle2.upperRightPoint.getX());
//        assertEquals(startY+350, bottom1middle2.upperRightPoint.getY());
//        assertEquals(startX+128, bottom1middle2.lowerRightPoint.getX());
//        assertEquals(startY+424, bottom1middle2.lowerRightPoint.getY());
//        assertEquals(startX+64, bottom1middle2.lowPoint.getX());
//        assertEquals(startY+456, bottom1middle2.lowPoint.getY());
//        assertEquals(startX, bottom1middle2.lowerLeftPoint.getX());
//        assertEquals(startY+424, bottom1middle2.lowerLeftPoint.getY());
//        assertEquals(startX, bottom1middle2.upperLeftPoint.getX());
//        assertEquals(startY+350, bottom1middle2.upperLeftPoint.getY());
//        Hex bottom1Middle3 = map.getBottom1Middle3();
//        assertEquals(startX+192, bottom1Middle3.upPoint.getX());
//        assertEquals(startY+318, bottom1Middle3.upPoint.getY());
//        assertEquals(startX+256, bottom1Middle3.upperRightPoint.getX());
//        assertEquals(startY+350, bottom1Middle3.upperRightPoint.getY());
//        assertEquals(startX+256, bottom1Middle3.lowerRightPoint.getX());
//        assertEquals(startY+424, bottom1Middle3.lowerRightPoint.getY());
//        assertEquals(startX+192, bottom1Middle3.lowPoint.getX());
//        assertEquals(startY+456, bottom1Middle3.lowPoint.getY());
//        assertEquals(startX+128, bottom1Middle3.lowerLeftPoint.getX());
//        assertEquals(startY+424, bottom1Middle3.lowerLeftPoint.getY());
//        assertEquals(startX+128, bottom1Middle3.upperLeftPoint.getX());
//        assertEquals(startY+350, bottom1Middle3.upperLeftPoint.getY());
//        Hex bottom1Right = map.getBottom1Right();
//        assertEquals(startX+320, bottom1Right.upPoint.getX());
//        assertEquals(startY+318, bottom1Right.upPoint.getY());
//        assertEquals(startX+384, bottom1Right.upperRightPoint.getX());
//        assertEquals(startY+350, bottom1Right.upperRightPoint.getY());
//        assertEquals(startX+384, bottom1Right.lowerRightPoint.getX());
//        assertEquals(startY+424, bottom1Right.lowerRightPoint.getY());
//        assertEquals(startX+320, bottom1Right.lowPoint.getX());
//        assertEquals(startY+456, bottom1Right.lowPoint.getY());
//        assertEquals(startX+256, bottom1Right.lowerLeftPoint.getX());
//        assertEquals(startY+424, bottom1Right.lowerLeftPoint.getY());
//        assertEquals(startX+256, bottom1Right.upperLeftPoint.getX());
//        assertEquals(startY+350, bottom1Right.upperLeftPoint.getY());
//        Hex bottom2Left = map.getBottom2Left();
//        assertEquals(startX, bottom2Left.upPoint.getX());
//        assertEquals(startY+424, bottom2Left.upPoint.getY());
//        assertEquals(startX+64, bottom2Left.upperRightPoint.getX());
//        assertEquals(startY+456, bottom2Left.upperRightPoint.getY());
//        assertEquals(startX+64, bottom2Left.lowerRightPoint.getX());
//        assertEquals(startY+530, bottom2Left.lowerRightPoint.getY());
//        assertEquals(startX, bottom2Left.lowPoint.getX());
//        assertEquals(startY+562, bottom2Left.lowPoint.getY());
//        assertEquals(startX-64, bottom2Left.lowerLeftPoint.getX());
//        assertEquals(startY+530, bottom2Left.lowerLeftPoint.getY());
//        assertEquals(startX-64, bottom2Left.upperLeftPoint.getX());
//        assertEquals(startY+456, bottom2Left.upperLeftPoint.getY());
//        Hex bottom2Middle = map.getBottom2Middle();
//        assertEquals(startX+128, bottom2Middle.upPoint.getX());
//        assertEquals(startY+424, bottom2Middle.upPoint.getY());
//        assertEquals(startX+192, bottom2Middle.upperRightPoint.getX());
//        assertEquals(startY+456, bottom2Middle.upperRightPoint.getY());
//        assertEquals(startX+192, bottom2Middle.lowerRightPoint.getX());
//        assertEquals(startY+530, bottom2Middle.lowerRightPoint.getY());
//        assertEquals(startX+128, bottom2Middle.lowPoint.getX());
//        assertEquals(startY+562, bottom2Middle.lowPoint.getY());
//        assertEquals(startX+64, bottom2Middle.lowerLeftPoint.getX());
//        assertEquals(startY+530, bottom2Middle.lowerLeftPoint.getY());
//        assertEquals(startX+64, bottom2Middle.upperLeftPoint.getX());
//        assertEquals(startY+456, bottom2Middle.upperLeftPoint.getY());
//        Hex bottom2Right = map.getBottom2Right();
//        assertEquals(startX+256, bottom2Right.upPoint.getX());
//        assertEquals(startY+424, bottom2Right.upPoint.getY());
//        assertEquals(startX+320, bottom2Right.upperRightPoint.getX());
//        assertEquals(startY+456, bottom2Right.upperRightPoint.getY());
//        assertEquals(startX+320, bottom2Right.lowerRightPoint.getX());
//        assertEquals(startY+530, bottom2Right.lowerRightPoint.getY());
//        assertEquals(startX+256, bottom2Right.lowPoint.getX());
//        assertEquals(startY+562, bottom2Right.lowPoint.getY());
//        assertEquals(startX+192, bottom2Right.lowerLeftPoint.getX());
//        assertEquals(startY+530, bottom2Right.lowerLeftPoint.getY());
//        assertEquals(startX+192, bottom2Right.upperLeftPoint.getX());
//        assertEquals(startY+456, bottom2Right.upperLeftPoint.getY());
    }

}